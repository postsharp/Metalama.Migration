// THIS FILE IS T4-GENERATED.
// To edit, go to Logger.Generated.tt.
// To transform, run this: "C:\Program Files (x86)\Common Files\Microsoft Shared\TextTemplating\14.0\TextTransform.exe" BuildTimeLogger.Generated.tt
// The transformation is not automatic because we are in a shared project.


<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>

namespace PostSharp.Extensibility.BuildTimeLogging
{

	public partial class BuildTimeLogger
	{

	<# for ( int i = 1; i < 8; i++ )
	{
	#>
		/// <summary>
        ///   Appends a string to the next message and formats it using a formatting string and <#=i#> argument<#=GetPlural(i)#>. 
        ///   The message is sent and flushed when the <see cref="WriteLine(string)"/> method is invoked.
        /// </summary>
        /// <param name = "format">Message formatting string.</param>
		<#GenerateXmlDoc(i);#>
		public void Write<<#=Repeat( "T{0}", i )#>>( string format, <#=Repeat( "T{0} arg{0}", i )#> )
		{
			string message = SafeStringFormat( format, <#=Repeat( "arg{0}", i )#> );
			this.InternalWrite( message );
		}

		/// <summary>
        ///   Writes a message given a formatting string and <#=i#> argument<#=GetPlural(i)#>. 
        /// </summary>
        /// <param name = "format">Message formatting string.</param>
		<#GenerateXmlDoc(i);#>
		public void WriteLine<<#=Repeat( "T{0}", i )#>>( string format, <#=Repeat( "T{0} arg{0}", i )#> )
		{
			string message = SafeStringFormat( format, <#=Repeat( "arg{0}", i )#> );
			this.InternalWriteLine( message );
		}

		/// <summary>
        /// Writes a message given a formatting string and <#=i#> argument<#=GetPlural(i)#>, and increases the indentation level. To decrease the indentation level, dispose the <see cref="BuildTimeLogActivity"/>
        /// returned by this method.
        /// </summary>
        /// <param name="format">Message.</param>
        /// <returns>An opaque object to be disposed at the end of the activity to decrease the indentation level.</returns>
		<#GenerateXmlDoc(i);#>
		public BuildTimeLogActivity Activity<<#=Repeat( "T{0}", i )#>>( string format, <#=Repeat( "T{0} arg{0}", i )#> )
		{
			string message = SafeStringFormat( format, <#=Repeat( "arg{0}", i )#> );
			return this.Activity( message );
		}

	<#
	}
	#>



	}
}


<#+
static string Repeat( string format, int count )
{
	string s = "";
	for ( int i = 1; i <= count; i++ )
	{
		if ( i > 1 ) s += ", ";
		s += string.Format( format, i );
	}

	return s;
}

void GenerateXmlDoc( int count )
{
	for ( int i = 1; i <= count; i++ )
	{
	#>
		/// <typeparam name="T<#=i#>">Type of the <#=i#>-th parameter.</typeparam>
		/// <param name="arg<#= i #>">Value of the <#=i#>-th parameter.</param>
	<#+
	}
}

string GetPlural( int count )
{
	return count > 1 ? "s" : "";
}

#>